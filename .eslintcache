[{"/Users/donghwan/Documents/nuber-eats-frontend/src/index.tsx":"1","/Users/donghwan/Documents/nuber-eats-frontend/src/components/app.tsx":"2","/Users/donghwan/Documents/nuber-eats-frontend/src/routers/logged-in-router.tsx":"3","/Users/donghwan/Documents/nuber-eats-frontend/src/pages/client/restaurant-detail.tsx":"4","/Users/donghwan/Documents/nuber-eats-frontend/src/pages/client/search.tsx":"5","/Users/donghwan/Documents/nuber-eats-frontend/src/user/edit-profile.tsx":"6","/Users/donghwan/Documents/nuber-eats-frontend/src/pages/login.tsx":"7","/Users/donghwan/Documents/nuber-eats-frontend/src/fragments.ts":"8","/Users/donghwan/Documents/nuber-eats-frontend/src/components/category.tsx":"9","/Users/donghwan/Documents/nuber-eats-frontend/src/components/form-error.tsx":"10","/Users/donghwan/Documents/nuber-eats-frontend/src/pages/404.tsx":"11","/Users/donghwan/Documents/nuber-eats-frontend/src/hooks/useMe.tsx":"12","/Users/donghwan/Documents/nuber-eats-frontend/src/components/restaurant.tsx":"13","/Users/donghwan/Documents/nuber-eats-frontend/src/pages/client/restaurants.tsx":"14","/Users/donghwan/Documents/nuber-eats-frontend/src/components/pagination.tsx":"15","/Users/donghwan/Documents/nuber-eats-frontend/src/apollo.ts":"16","/Users/donghwan/Documents/nuber-eats-frontend/src/user/confirm-email.tsx":"17","/Users/donghwan/Documents/nuber-eats-frontend/src/pages/create-account.tsx":"18","/Users/donghwan/Documents/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx":"19","/Users/donghwan/Documents/nuber-eats-frontend/src/__generated__/globalTypes.ts":"20","/Users/donghwan/Documents/nuber-eats-frontend/src/reportWebVitals.ts":"21","/Users/donghwan/Documents/nuber-eats-frontend/src/constants.ts":"22","/Users/donghwan/Documents/nuber-eats-frontend/src/components/header.tsx":"23","/Users/donghwan/Documents/nuber-eats-frontend/src/pages/owner/add-restaurant.tsx":"24","/Users/donghwan/Documents/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx":"25","/Users/donghwan/Documents/nuber-eats-frontend/src/pages/owner/add-dish.tsx":"26","/Users/donghwan/Documents/nuber-eats-frontend/src/routers/logged-out-router.tsx":"27","/Users/donghwan/Documents/nuber-eats-frontend/src/components/dish.tsx":"28"},{"size":770,"mtime":1611831682719,"results":"29","hashOfConfig":"30"},{"size":392,"mtime":1611831682718,"results":"31","hashOfConfig":"30"},{"size":2576,"mtime":1611881726890,"results":"32","hashOfConfig":"30"},{"size":1567,"mtime":1611831682721,"results":"33","hashOfConfig":"30"},{"size":2336,"mtime":1611621075347,"results":"34","hashOfConfig":"35"},{"size":2896,"mtime":1611831682734,"results":"36","hashOfConfig":"30"},{"size":3666,"mtime":1611640942539,"results":"37","hashOfConfig":"35"},{"size":698,"mtime":1611990255803,"results":"38","hashOfConfig":"30"},{"size":615,"mtime":1611831682718,"results":"39","hashOfConfig":"30"},{"size":250,"mtime":1611640093016,"results":"40","hashOfConfig":"35"},{"size":589,"mtime":1611558958624,"results":"41","hashOfConfig":"35"},{"size":315,"mtime":1611636259266,"results":"42","hashOfConfig":"35"},{"size":679,"mtime":1611621722536,"results":"43","hashOfConfig":"35"},{"size":3313,"mtime":1611577254796,"results":"44","hashOfConfig":"35"},{"size":1117,"mtime":1611645602156,"results":"45","hashOfConfig":"35"},{"size":999,"mtime":1611880522781,"results":"46","hashOfConfig":"30"},{"size":1824,"mtime":1611795353389,"results":"47","hashOfConfig":"35"},{"size":4234,"mtime":1611644390038,"results":"48","hashOfConfig":"35"},{"size":1679,"mtime":1611814827580,"results":"49","hashOfConfig":"35"},{"size":1684,"mtime":1611990375741,"results":"50","hashOfConfig":"30"},{"size":425,"mtime":1611376810893,"results":"51","hashOfConfig":"35"},{"size":49,"mtime":1611538420986,"results":"52","hashOfConfig":"35"},{"size":1009,"mtime":1611831682718,"results":"53","hashOfConfig":"30"},{"size":4470,"mtime":1611831682722,"results":"54","hashOfConfig":"30"},{"size":4194,"mtime":1611994818786,"results":"55","hashOfConfig":"30"},{"size":7195,"mtime":1611892894095,"results":"56","hashOfConfig":"30"},{"size":565,"mtime":1611831682722,"results":"57","hashOfConfig":"30"},{"size":475,"mtime":1611987861016,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fugyv4",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"17bn6e3",{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/donghwan/Documents/nuber-eats-frontend/src/index.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/components/app.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/routers/logged-in-router.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/pages/client/restaurant-detail.tsx",["121"],"/Users/donghwan/Documents/nuber-eats-frontend/src/pages/client/search.tsx",[],["122","123"],"/Users/donghwan/Documents/nuber-eats-frontend/src/user/edit-profile.tsx",["124","125","126"],"/Users/donghwan/Documents/nuber-eats-frontend/src/pages/login.tsx",["127","128","129"],"import { gql, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\nimport { Button } from \"../components/button\";\nimport { FormError } from \"../components/form-error\";\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\nimport nuberLogo from \"../images/logo.svg\";\nimport {\n  loginMutation,\n  loginMutationVariables,\n} from \"../__generated__/loginMutation\";\n\nexport const LOGIN_MUTATION = gql`\n  mutation loginMutation($loginInput: LoginInput!) {\n    login(input: $loginInput) {\n      ok\n      token\n      error\n    }\n  }\n`;\n\ninterface ILoginForm {\n  email: string;\n  password: string;\n}\n\nexport const Login = () => {\n  const {\n    register,\n    getValues,\n    errors,\n    handleSubmit,\n    formState,\n  } = useForm<ILoginForm>({\n    mode: \"onChange\",\n  });\n  const onCompleted = (data: loginMutation) => {\n    const {\n      login: { ok, token },\n    } = data;\n    if (ok && token) {\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\n      authTokenVar(token);\n      isLoggedInVar(true);\n    }\n  };\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\n    loginMutation,\n    loginMutationVariables\n  >(LOGIN_MUTATION, {\n    onCompleted,\n  });\n  const onSubmit = () => {\n    if (!loading) {\n      const { email, password } = getValues();\n      loginMutation({\n        variables: {\n          loginInput: {\n            email,\n            password,\n          },\n        },\n      });\n    }\n  };\n  return (\n    <div className=\"h-screen flex items-center flex-col mt-14 lg:mt-28\">\n      <Helmet>\n        <title>Login | Nuber Eats</title>\n      </Helmet>\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\n        <img src={nuberLogo} className=\"w-52 mb-5\" />\n        <h4 className=\"w-full font-medium text-left text-3xl mb-10\">\n          Welcome back\n        </h4>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"grid gap-3 mt-5 w-full mb-5\"\n        >\n          <input\n            ref={register({\n              required: \"Email is required\",\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            })}\n            name=\"email\"\n            required\n            type=\"email\"\n            placeholder=\"Email\"\n            className=\"input\"\n          />\n          {errors.email?.message && (\n            <FormError errorMessage={errors.email?.message} />\n          )}\n          {errors.email?.type === \"pattern\" && (\n            <FormError errorMessage={\"Please enter a valid email\"} />\n          )}\n          <input\n            ref={register({ required: \"Password is required\" })}\n            required\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"input\"\n          />\n          {errors.password?.message && (\n            <FormError errorMessage={errors.password.message} />\n          )}\n          <Button\n            canClick={formState.isValid}\n            loading={loading}\n            actionText={\"Log In\"}\n          />\n          {loginMutationResult?.login.error && (\n            <FormError errorMessage={loginMutationResult.login.error} />\n          )}\n        </form>\n        <div>\n          New to Nuber?{\" \"}\n          <Link to=\"/create-account\" className=\"text-lime-600 hover:underline\">\n            Create an Account\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n",["130","131"],"/Users/donghwan/Documents/nuber-eats-frontend/src/fragments.ts",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/components/category.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/components/form-error.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/pages/404.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/hooks/useMe.tsx",["132"],"import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { meQuery } from \"../__generated__/meQuery\";\n\nexport const ME_QUERY = gql`\n  query meQuery {\n    me {\n      id\n      email\n      role\n      verified\n    }\n  }\n`;\n\nexport const useMe = () => {\n  return useQuery<meQuery>(ME_QUERY);\n};\n","/Users/donghwan/Documents/nuber-eats-frontend/src/components/restaurant.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/pages/client/restaurants.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/components/pagination.tsx",["133","134"],"import React from \"react\";\n\ninterface IPaginationProps {\n  page: number;\n  setPage: React.Dispatch<React.SetStateAction<number>>;\n  totalPages?: number;\n}\n\nexport const Pagination: React.FC<IPaginationProps> = ({\n  page,\n  setPage,\n  totalPages,\n}) => {\n  const onNextPageClick = () => setPage((current) => current + 1);\n  const onPrevPageClick = () => setPage((current) => current - 1);\n\n  if (!totalPages) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"grid grid-cols-3 text-center max-w-md items-center mx-auto mt-10\">\n      {page > 1 ? (\n        <button\n          role=\"button\"\n          onClick={onPrevPageClick}\n          className=\"focus:outline-none font-medium text-2xl\"\n        >\n          &larr;\n        </button>\n      ) : (\n        <div></div>\n      )}\n      <span>\n        Page {page} of {totalPages}\n      </span>\n      {page !== totalPages ? (\n        <button\n          role=\"button\"\n          onClick={onNextPageClick}\n          className=\"focus:outline-none font-medium text-2xl\"\n        >\n          &rarr;\n        </button>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n","/Users/donghwan/Documents/nuber-eats-frontend/src/apollo.ts",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/user/confirm-email.tsx",["135"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useMe } from \"../hooks/useMe\";\nimport {\n  verifyEmail,\n  verifyEmailVariables,\n} from \"../__generated__/verifyEmail\";\n\nconst VERIFY_EMAIL_MUTATION = gql`\n  mutation verifyEmail($input: VerifyEmailInput!) {\n    verifyEmail(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const ConfirmEmail = () => {\n  const { data: userData } = useMe();\n  const client = useApolloClient();\n  const history = useHistory();\n  console.log(userData);\n  const onCompleted = (data: verifyEmail) => {\n    const {\n      verifyEmail: { ok },\n    } = data;\n    if (ok && userData?.me.id) {\n      client.writeFragment({\n        id: `User:${userData.me.id}`,\n        fragment: gql`\n          fragment VerifiedUser on User {\n            verified\n          }\n        `,\n        data: {\n          verified: true,\n        },\n      });\n      history.push(\"/\");\n    }\n  };\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\n    VERIFY_EMAIL_MUTATION,\n    {\n      onCompleted,\n    }\n  );\n  const location = useLocation();\n  useEffect(() => {\n    const [_, code] = location.search.split(\"code=\");\n    console.log(code);\n    verifyEmail({\n      variables: {\n        input: {\n          code,\n        },\n      },\n    });\n  }, [location, verifyEmail]);\n  return (\n    <div className=\" mt-52 flex flex-col items-center justify-center\">\n      <Helmet>\n        <title>Vefiry Email | Nuber Eats</title>\n      </Helmet>\n      <h2 className=\"text-lg mb-2 font-medium\">Confirming email...</h2>\n      <h4 className=\"text-gray-700 text-sm\">\n        Please wait, don't close this page...\n      </h4>\n    </div>\n  );\n};\n","/Users/donghwan/Documents/nuber-eats-frontend/src/pages/create-account.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx",["136","137"],"/Users/donghwan/Documents/nuber-eats-frontend/src/__generated__/globalTypes.ts",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/reportWebVitals.ts",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/constants.ts",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/components/header.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/pages/owner/add-restaurant.tsx",["138"],"/Users/donghwan/Documents/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx",["139","140","141","142","143","144"],"/Users/donghwan/Documents/nuber-eats-frontend/src/pages/owner/add-dish.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/routers/logged-out-router.tsx",[],"/Users/donghwan/Documents/nuber-eats-frontend/src/components/dish.tsx",[],{"ruleId":"145","severity":1,"message":"146","line":29,"column":11,"nodeType":"147","messageId":"148","endLine":29,"endColumn":18},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"145","severity":1,"message":"153","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":20},{"ruleId":"154","severity":1,"message":"155","line":91,"column":32,"nodeType":"156","messageId":"157","endLine":91,"endColumn":33,"suggestions":"158"},{"ruleId":"154","severity":1,"message":"155","line":91,"column":57,"nodeType":"156","messageId":"157","endLine":91,"endColumn":58,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":76,"column":9,"nodeType":"162","endLine":76,"endColumn":54},{"ruleId":"154","severity":1,"message":"155","line":87,"column":34,"nodeType":"156","messageId":"157","endLine":87,"endColumn":35,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"155","line":87,"column":59,"nodeType":"156","messageId":"157","endLine":87,"endColumn":60,"suggestions":"164"},{"ruleId":"149","replacedBy":"165"},{"ruleId":"151","replacedBy":"166"},{"ruleId":"145","severity":1,"message":"167","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":13},{"ruleId":"168","severity":1,"message":"169","line":23,"column":9,"nodeType":"162","endLine":27,"endColumn":10},{"ruleId":"168","severity":1,"message":"169","line":37,"column":9,"nodeType":"162","endLine":41,"endColumn":10},{"ruleId":"145","severity":1,"message":"170","line":52,"column":12,"nodeType":"147","messageId":"148","endLine":52,"endColumn":13},{"ruleId":"145","severity":1,"message":"171","line":1,"column":15,"nodeType":"147","messageId":"148","endLine":1,"endColumn":30},{"ruleId":"145","severity":1,"message":"172","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},{"ruleId":"145","severity":1,"message":"173","line":81,"column":5,"nodeType":"147","messageId":"148","endLine":81,"endColumn":11},{"ruleId":"145","severity":1,"message":"174","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":25},{"ruleId":"145","severity":1,"message":"175","line":5,"column":3,"nodeType":"147","messageId":"148","endLine":5,"endColumn":13},{"ruleId":"145","severity":1,"message":"176","line":7,"column":3,"nodeType":"147","messageId":"148","endLine":7,"endColumn":15},{"ruleId":"145","severity":1,"message":"177","line":9,"column":3,"nodeType":"147","messageId":"148","endLine":9,"endColumn":13},{"ruleId":"145","severity":1,"message":"178","line":52,"column":11,"nodeType":"147","messageId":"148","endLine":52,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":70,"column":53,"nodeType":"181","messageId":"182","endLine":70,"endColumn":55},"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["183"],"no-negated-in-lhs",["184"],"'useHistory' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["185","186"],["187","188"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["189","190"],["191","192"],["183"],["184"],"'React' is defined but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","'_' is assigned a value but never used.","'useApolloClient' is defined but never used.","'useEffect' is defined but never used.","'errors' is assigned a value but never used.","'useState' is defined but never used.","'VictoryBar' is defined but never used.","'VictoryLabel' is defined but never used.","'VictoryPie' is defined but never used.","'IData' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"messageId":"193","fix":"194","desc":"195"},{"messageId":"196","fix":"197","desc":"198"},{"messageId":"193","fix":"199","desc":"195"},{"messageId":"196","fix":"200","desc":"198"},{"messageId":"193","fix":"201","desc":"195"},{"messageId":"196","fix":"202","desc":"198"},{"messageId":"193","fix":"203","desc":"195"},{"messageId":"196","fix":"204","desc":"198"},"removeEscape",{"range":"205","text":"206"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"207","text":"208"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"209","text":"206"},{"range":"210","text":"208"},{"range":"211","text":"206"},{"range":"212","text":"208"},{"range":"213","text":"206"},{"range":"214","text":"208"},[2296,2297],"",[2296,2296],"\\",[2321,2322],[2321,2321],[2253,2254],[2253,2253],[2278,2279],[2278,2278]]